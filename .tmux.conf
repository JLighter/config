# Change prefix
set -g prefix C-a
bind C-a send-prefix
unbind C-b

# Mouse options
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# Clipboard

## Utils
set-window-option -g xterm-keys on

# No delay for escape key press
set -sg escape-time 0

set -g history-limit 10000

# reload ~/.tmux.conf using prefix r
bind r source-file ~/.tmux.conf \; display "tmux reloaded"

# Change add new pane to - (horizontal) and / (vertical)
bind / split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

##  Tmux with Vim

setw -g mode-keys vi
set -g status-keys vi

set -g @yank_with_mouse on # or 'off'
set -g @shell_mode 'vi'
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
if-shell "uname | grep -q Darwin" 'bind-key -T copy-mode-vi y send -X copy-pipe "pbcopy" ; display-message "Copied to system clipboard"'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

# start numbering from 0 instead of 1
set -g base-index 0
setw -g pane-base-index 0

# ==========
# status bar
# ==========

set -g status-interval 1
# set status bar
set -g status-justify left
set-option -g status-left-length 0
set -g status-left ""

set-option -g status-right-length 140
set-option -g status-right "#[bg=green]#[fg=colour236] CPU:#{cpu_percentage}/#{cpu_temp} | RAM:#{ram_percentage} "

set -g status-bg colour235
set -g status-fg green

# Change active window color
setw -g window-status-style fg=green,bg=colour237
setw -g window-status-current-style fg=color237,bg=green
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set -g window-status-format "#T "
set -g window-status-current-format "#T "
set-window-option -g window-status-separator ''


set-option -g set-titles on

## Theme

# True colors
set -g default-terminal "screen-256color"
set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',screen-256color:RGB'

# quiet!
# http://unix.stackexchange.com/questions/169992/why-are-my-windows-highlighted-when-i-first-open-tmux
setw -g monitor-activity on
set -g monitor-silence 0
set -g bell-action none

set -g visual-activity on
set -g visual-bell on
set -g visual-silence on
set -g bell-action none

## Continuum
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# history
# set -g default-shell /usr/bin/zsh
# set -g default-command /usr/bin/zsh

